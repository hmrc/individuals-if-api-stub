{
  "openapi": "3.0.3",
  "info": {
    "title": "API#1686 Individual Employment",
    "description": "This API retrieves the employment details of the individual identified by NINO",
    "version": "1.0.0",
    "contact": {
      "name": "Wayne Morris",
      "email": "wayne.morris@hmrc.gov.uk"
    }
  },
  "servers": [
    {
      "url": "https://{hostname}:{port}",
      "description": "Different hostnames and ports are used in different IF environments",
      "variables": {
        "hostname": {
          "default": "localhost",
          "description": "The hostname for one of IST, Clone, and Production"
        },
        "port": {
          "default": "8443",
          "description": "The port for one of IST, Clone, and Production"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "API#1686",
      "description": "API for Get Individual Employment."
    }
  ],
  "paths": {
    "/individuals/employment/{idType}/{idValue}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/idTypeParam"
        },
        {
          "$ref": "#/components/parameters/idValueParam"
        }
      ],
      "get": {
        "summary": "API#1686 Get Individual Employment",
        "description": "Retrieve an individual's employment details for a date range using a NINO. Optionally specify a subset of data items to return using the 'fields' query string parameter.\n\n/individuals/employment/{idType}/{idValue}?startDate={date}&endDate={date}[&fields={data items spec}]\n\nExample URIs:\n  \n/individuals/employment/nino/AB123456C?startDate=2015-04-06&endDate=2019-04-05\n\n/individuals/employment/nino/AB123456C?startDate=2015-04-06&endDate=2019-04-05&fields=employments(employer(name,districtNumber,schemeRef,address(line1,line2,line3,line4,line5,postcode)),employment(startDate,endDate))\n\n```\nChange Log:\nVersion Date       Author         Description\n0.1.0   01-09-2020 Wayne Morris   Initial draft for review\n0.2.0   18-09-2020 Wayne Morris   Baseline candidate. Changes since 0.1.0:\n                                  1) Added optional request header x-end-client-id\n                                  2) Removed the 'Content-Type' response header from all responses\n                                  3) Added a new 400 error response: INVALID_CLIENTID\n                                  4) Added the 422 error response which is about validating the contents of the 'fields' query string\n                                  5) employments array made mandatory\n                                  6) payFrequency: Enum values changed and description updated.\n                                  7) payments array moved up a level in the object heirarchy\n                                  8) Updated 200 Full Response example and added 200 Filtered Response example\n0.3.0   24-09-2020 Wayne Morris   Baseline candidate. Changes since 0.2.0:\n                                  1) Added the 'date2000-2099Type' definition and changed the 'startDateQueryParam' and 'endDateQueryParam' definitions to reference it (instead of 'dateType')\n                                  2) Tightened the regex on the 'fields' query parameter string; see the definition 'fieldsQueryParam'\n1.0.0   30-09-2020 Wayne Morris   Baseline version 1.0.0. Changes since 0.3.0:\n                                  1) Corrected the regex pattern for the 'date2000-2099Type' definition to only allow years 2000 to 2099\n                                  2) Changed INVALID_CLIENTID to INVALID_X-END-CLIENT-ID\n                                  3) Added a new 422 error response: INVALID_DATE_RANGE\n                                  4) Added 2 new 400 responses - MISSING_STARTDATE and MISSING_ENDDATE\n```\n",
        "operationId": "getIndividualEmployment",
        "tags": [
          "API#1686"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/environment"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/x-end-client-id"
          },
          {
            "$ref": "#/components/parameters/startDateQueryParam"
          },
          {
            "$ref": "#/components/parameters/endDateQueryParam"
          },
          {
            "$ref": "#/components/parameters/fieldsQueryParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {
              "CorrelationId": {
                "$ref": "#/components/headers/CorrelationId"
              }
            },
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/successResponse"
                },
                "examples": {
                  "Full Response": {
                    "summary": "Employment details with maximum data",
                    "value": {
                      "employments": [
                        {
                          "employer": {
                            "name": "ACME Industries Limited",
                            "address": {
                              "line1": "Unit 23",
                              "line2": "Utilitarian Industrial Park",
                              "line3": "Utilitown",
                              "line4": "County Durham",
                              "line5": "UK",
                              "postcode": "DH4 4YY"
                            },
                            "districtNumber": "247",
                            "schemeRef": "ZT6767895A"
                          },
                          "employment": {
                            "startDate": "2019-01-01",
                            "endDate": "2019-03-31",
                            "payFrequency": "M1",
                            "payrollId": "324/BD",
                            "address": {
                              "line1": "Rose Cottage",
                              "line2": "Blackfriars Lane",
                              "line3": "Churchtown",
                              "line4": "Cumbria",
                              "line5": "UK",
                              "postcode": "KN23 4AB"
                            }
                          },
                          "payments": [
                            {
                              "date": "2019-01-31",
                              "ytdTaxablePay": 4765.32,
                              "paidTaxablePay": 4765.32,
                              "paidNonTaxOrNICPayment": 0,
                              "week": 4,
                              "month": 1
                            },
                            {
                              "date": "2019-02-28",
                              "ytdTaxablePay": 9876.54,
                              "paidTaxablePay": 9876.54,
                              "paidNonTaxOrNICPayment": 0,
                              "week": 8,
                              "month": 2
                            },
                            {
                              "date": "2019-03-31",
                              "ytdTaxablePay": 13244,
                              "paidTaxablePay": 13244,
                              "paidNonTaxOrNICPayment": 0,
                              "week": 13,
                              "month": 3
                            }
                          ]
                        },
                        {
                          "employer": {
                            "name": "Robson & Robson and Sons",
                            "address": {
                              "line1": "Robson House",
                              "line2": "Fairfield Drive",
                              "line3": "Utilitown",
                              "line4": "County Durham",
                              "line5": "UK",
                              "postcode": "DH4 2CC"
                            },
                            "districtNumber": "247",
                            "schemeRef": "A1987CB"
                          },
                          "employment": {
                            "startDate": "2019-05-10",
                            "endDate": "2019-07-12",
                            "payFrequency": "M1",
                            "payrollId": "DX-6874",
                            "address": {
                              "line1": "Rose Cottage",
                              "line2": "Blackfriars Lane",
                              "line3": "Churchtown",
                              "line4": "Cumbria",
                              "line5": "UK",
                              "postcode": "KN23 4AB"
                            }
                          },
                          "payments": [
                            {
                              "date": "2019-06-30",
                              "ytdTaxablePay": 15000,
                              "paidTaxablePay": 15000,
                              "paidNonTaxOrNICPayment": 0,
                              "week": 26,
                              "month": 6
                            },
                            {
                              "date": "2019-07-31",
                              "ytdTaxablePay": 18876.54,
                              "paidTaxablePay": 18876.54,
                              "paidNonTaxOrNICPayment": 0,
                              "week": 30,
                              "month": 7
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "Filtered Response": {
                    "summary": "Employment details with filtered data",
                    "value": {
                      "employments": [
                        {
                          "employer": {
                            "name": "ACME Industries Limited",
                            "address": {
                              "line1": "Unit 23",
                              "line2": "Utilitarian Industrial Park",
                              "line3": "Utilitown",
                              "line4": "County Durham",
                              "line5": "UK",
                              "postcode": "DH4 4YY"
                            },
                            "districtNumber": "247",
                            "schemeRef": "ZT6767895A"
                          },
                          "employment": {
                            "startDate": "2019-01-01",
                            "endDate": "2019-03-31"
                          }
                        },
                        {
                          "employer": {
                            "name": "Robson & Robson and Sons",
                            "address": {
                              "line1": "Robson House",
                              "line2": "Fairfield Drive",
                              "line3": "Utilitown",
                              "line4": "County Durham",
                              "line5": "UK",
                              "postcode": "DH4 2CC"
                            },
                            "districtNumber": "247",
                            "schemeRef": "A1987CB"
                          },
                          "employment": {
                            "startDate": "2019-05-10",
                            "endDate": "2019-07-12"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n```\nA bad request has been made; this could be due to one or more issues with the request\n\"code\"                 \"reason\"\nINVALID_IDTYPE          Submission has not passed validation. Invalid parameter idType.\nINVALID_IDVALUE         Submission has not passed validation. Invalid parameter idValue.\nINVALID_CORRELATIONID   Submission has not passed validation. Invalid header CorrelationId.\nINVALID_X-END-CLIENT-ID Submission has not passed validation. Invalid header x-end-client-id.\nINVALID_STARTDATE       Submission has not passed validation. Invalid parameter startDate.\nINVALID_ENDDATE         Submission has not passed validation. Invalid parameter endDate.\nINVALID_FIELDS          Submission has not passed validation. Invalid parameter fields.\nMISSING_STARTDATE       Submission has not passed validation. Required parameter startDate has not been supplied.\nMISSING_ENDDATE         Submission has not passed validation. Required parameter endDate has not been supplied.",
            "headers": {
              "CorrelationId": {
                "$ref": "#/components/headers/CorrelationId"
              }
            },
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "examples": {
                  "Single Error Code": {
                    "value": {
                      "failures": [
                        {
                          "code": "INVALID_IDTYPE",
                          "reason": "Submission has not passed validation. Invalid parameter idType."
                        }
                      ]
                    }
                  },
                  "Multiple Error Codes": {
                    "value": {
                      "failures": [
                        {
                          "code": "INVALID_IDTYPE",
                          "reason": "Submission has not passed validation. Invalid parameter idType."
                        },
                        {
                          "code": "INVALID_IDVALUE",
                          "reason": "Submission has not passed validation. Invalid parameter idValue."
                        },
                        {
                          "code": "INVALID_CORRELATIONID",
                          "reason": "Submission has not passed validation. Invalid header CorrelationId."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found\n```\n\"code\"                        \"reason\"\nNO_DATA_FOUND                 The remote endpoint has indicated that there was no data available.",
            "headers": {
              "CorrelationId": {
                "$ref": "#/components/headers/CorrelationId"
              }
            },
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "examples": {
                  "NO_DATA_FOUND": {
                    "value": {
                      "failures": [
                        {
                          "code": "NO_DATA_FOUND",
                          "reason": "The remote endpoint has indicated that there was no data available."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity\n```\n\"code\"                   \"reason\"\nUNKNOWN_DATA_ITEM        There are 1 or more unknown data items in the 'fields' query string.\nINVALID_DATE_RANGE       The remote endpoint has indicated that the start date is after the end date.\n\nNOTE that the codes UNKNOWN_DATA_ITEM and INVALID_DATE_RANGE are mutually exclusive therefore a 422 response will always have only 1 entry in the 'failures' array in the response body.",
            "headers": {
              "CorrelationId": {
                "$ref": "#/components/headers/CorrelationId"
              }
            },
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "examples": {
                  "Actual response": {
                    "value": {
                      "failures": [
                        {
                          "code": "UNKNOWN_DATA_ITEM",
                          "reason": "There are 1 or more unknown data items in the 'fields' query string."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "428": {
            "description": "Precondition Required\n```\nIncluded for future use when the endpoint supports multiple types of identifiers\n\n\"code\"                  \"reason\"\nINVALID_IDENTIFIERS     Submission has not passed validation. The idType and idValue path parameters are not a valid combination.",
            "headers": {
              "CorrelationId": {
                "$ref": "#/components/headers/CorrelationId"
              }
            },
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "examples": {
                  "Single Error Code": {
                    "value": {
                      "failures": [
                        {
                          "code": "INVALID_IDENTIFIERS",
                          "reason": "Submission has not passed validation. The idType and idValue path parameters are not a valid combination."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error\n```\n\"code\"         \"reason\"\nSERVER_ERROR   IF is currently experiencing problems that require live service intervention.",
            "headers": {
              "CorrelationId": {
                "$ref": "#/components/headers/CorrelationId"
              }
            },
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "examples": {
                  "SERVER_ERROR": {
                    "value": {
                      "failures": [
                        {
                          "code": "SERVER_ERROR",
                          "reason": "IF is currently experiencing problems that require live service intervention."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable\n```\n\"code\"         \"reason\"\nSERVICE_UNAVAILABLE   Dependent systems are currently not responding.",
            "headers": {
              "CorrelationId": {
                "$ref": "#/components/headers/CorrelationId"
              }
            },
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "examples": {
                  "SERVICE_UNAVAILABLE": {
                    "value": {
                      "failures": [
                        {
                          "code": "SERVICE_UNAVAILABLE",
                          "reason": "Dependent systems are currently not responding."
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "headers": {
      "CorrelationId": {
        "description": "CorrelationID - Used for traceability purposes when present. UUID format",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{8}[-][0-9a-fA-F]{4}[-][0-9a-fA-F]{4}[-][0-9a-fA-F]{4}[-][0-9a-fA-F]{12}$"
        }
      }
    },
    "parameters": {
      "environment": {
        "in": "header",
        "name": "Environment",
        "description": "Mandatory. The environment in use.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "ist0",
            "clone",
            "live"
          ]
        }
      },
      "correlationId": {
        "in": "header",
        "name": "CorrelationId",
        "description": "Mandatory. A UUID format string for the transaction. If not specified the IF will create a UUID value to be used",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{8}[-][0-9a-fA-F]{4}[-][0-9a-fA-F]{4}[-][0-9a-fA-F]{4}[-][0-9a-fA-F]{12}$"
        }
      },
      "x-end-client-id": {
        "in": "header",
        "name": "x-end-client-id",
        "description": "Optional. A string identifying the end consumer. Currently supported string values:\n\n```        \nString           Description\nXMOJ0000         Ministry of Justice\nXHOM0000         Home Office\n",
        "required": false,
        "schema": {
          "description": "The regex pattern is deliberately loose to allow for a wide range of strings",
          "type": "string",
          "pattern": "^[A-Za-z0-9\\/ -]{1,64}$"
        }
      },
      "idTypeParam": {
        "in": "path",
        "name": "idType",
        "description": "Mandatory. Identification type. Possible values are 'nino' only",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^nino$"
        }
      },
      "idValueParam": {
        "in": "path",
        "name": "idValue",
        "description": "Mandatory. Currently only a NINO with optional suffix is supported",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^((?!(BG|GB|KN|NK|NT|TN|ZZ)|(D|F|I|Q|U|V)[A-Z]|[A-Z](D|F|I|O|Q|U|V))[A-Z]{2})[0-9]{6}[A-D\\s]?$"
        }
      },
      "startDateQueryParam": {
        "in": "query",
        "name": "startDate",
        "description": "Mandatory query string parameter to specify a start date in YYYY-MM-DD format for the range of data required.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/date2000-2099Type"
        }
      },
      "endDateQueryParam": {
        "in": "query",
        "name": "endDate",
        "description": "Mandatory query string parameter to specify an end date in YYYY-MM-DD format for the range of data required.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/date2000-2099Type"
        }
      },
      "fieldsQueryParam": {
        "in": "query",
        "name": "fields",
        "description": "Optional query string parameter to specify a subset of data to be returned.\n\nA comma-separated list of response property names. Where the response property is an object or array then each required property within that object/array must be specified by inclusion as a comma-separated list within round brackets immediately after the object/array property name e.g.\n\nfields=employments(employer(name,districtNumber,schemeRef,address(line1,line2,line3,line4,line5,postcode)),employment(startDate,endDate))",
        "required": false,
        "schema": {
          "description": "Don't allow: 1) the following characters at the start of the string: ,()_-\n             2) leading hyphen or underscore on property names i.e. after '(', ')', and ','\n             3) the following character combinations: ,,  ,(  ,)  (,  ((  ()  )(\n             4) the following characters at the end of the string: ,(\n",
          "type": "string",
          "pattern": "^((?!^[,()_-])(?![(,)][_-])(?![,(][,()])(?!\\)[(])[a-zA-Z0-9(),_-])*[^,(]$"
        }
      }
    },
    "schemas": {
      "errorResponse": {
        "title": "API#1686 Individual Employment Error Response Schema 1.0.0",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "failures"
        ],
        "properties": {
          "failures": {
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "code",
                "reason"
              ],
              "properties": {
                "code": {
                  "description": "Keys for all the errors returned",
                  "type": "string",
                  "pattern": "^[A-Z0-9_-]{1,160}$"
                },
                "reason": {
                  "description": "A simple description for the failure",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 160
                }
              }
            }
          }
        }
      },
      "successResponse": {
        "title": "API#1686 Individual Employment Success Response Schema 1.0.0",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "employments"
        ],
        "properties": {
          "employments": {
            "description": "Mandatory.",
            "type": "array",
            "minItems": 0,
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "employer": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "description": "Optional.",
                      "type": "string",
                      "minLength": 0,
                      "maxLength": 100
                    },
                    "address": {
                      "$ref": "#/components/schemas/addressType"
                    },
                    "districtNumber": {
                      "description": "Optional. The district number section of the employer reference.",
                      "type": "string",
                      "minLength": 0,
                      "maxLength": 3
                    },
                    "schemeRef": {
                      "description": "Optional. The scheme reference section of the employer reference.",
                      "type": "string",
                      "minLength": 0,
                      "maxLength": 10
                    }
                  }
                },
                "employment": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "startDate": {
                      "$ref": "#/components/schemas/dateType"
                    },
                    "endDate": {
                      "$ref": "#/components/schemas/dateType"
                    },
                    "payFrequency": {
                      "description": "Optional. The frequency of payments: W1 Weekly, W2 Fortnightly, W4 Four weekly, M1 Monthly, M3 Quarterly, M6 Bi-annually, MA Annually, IO One off, IR Irregular.",
                      "type": "string",
                      "enum": [
                        "W1",
                        "W2",
                        "W4",
                        "M1",
                        "M3",
                        "M6",
                        "MA",
                        "IO",
                        "IR"
                      ]
                    },
                    "payrollId": {
                      "description": "Optional. The individual's id within the employer's payroll",
                      "type": "string",
                      "minLength": 0,
                      "maxLength": 100
                    },
                    "address": {
                      "$ref": "#/components/schemas/addressType"
                    }
                  }
                },
                "payments": {
                  "description": "Optional. Payments made to the individual.",
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "date": {
                        "$ref": "#/components/schemas/dateType"
                      },
                      "ytdTaxablePay": {
                        "$ref": "#/components/schemas/paymentType"
                      },
                      "paidTaxablePay": {
                        "$ref": "#/components/schemas/paymentType"
                      },
                      "paidNonTaxOrNICPayment": {
                        "$ref": "#/components/schemas/paymentType"
                      },
                      "week": {
                        "description": "Optional. The week number to which the payment is related",
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 56,
                        "multipleOf": 1
                      },
                      "month": {
                        "description": "Optional. The month number to which the payment is related",
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 12,
                        "multipleOf": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "paymentType": {
        "type": "number",
        "minimum": -9999999999.99,
        "maximum": 9999999999.99,
        "multipleOf": 0.01
      },
      "dateType": {
        "description": "Format YYYY-MM-DD e.g. 2020-08-18. Range 1900-01-01 to 2099-12-31.",
        "type": "string",
        "pattern": "^(((19|20)([2468][048]|[13579][26]|0[48])|2000)[-]02[-]29|((19|20)[0-9]{2}[-](0[469]|11)[-](0[1-9]|1[0-9]|2[0-9]|30)|(19|20)[0-9]{2}[-](0[13578]|1[02])[-](0[1-9]|[12][0-9]|3[01])|(19|20)[0-9]{2}[-]02[-](0[1-9]|1[0-9]|2[0-8])))$"
      },
      "date2000-2099Type": {
        "description": "Format YYYY-MM-DD e.g. 2020-09-23",
        "type": "string",
        "pattern": "^((20([2468][048]|[13579][26]|0[48])|2000)[-]02[-]29|(20[0-9]{2}[-](0[469]|11)[-](0[1-9]|1[0-9]|2[0-9]|30)|20[0-9]{2}[-](0[13578]|1[02])[-](0[1-9]|[12][0-9]|3[01])|20[0-9]{2}[-]02[-](0[1-9]|1[0-9]|2[0-8])))$"
      },
      "addressLineType": {
        "type": "string",
        "minLength": 0,
        "maxLength": 100
      },
      "addressType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "line1": {
            "$ref": "#/components/schemas/addressLineType"
          },
          "line2": {
            "$ref": "#/components/schemas/addressLineType"
          },
          "line3": {
            "$ref": "#/components/schemas/addressLineType"
          },
          "line4": {
            "$ref": "#/components/schemas/addressLineType"
          },
          "line5": {
            "$ref": "#/components/schemas/addressLineType"
          },
          "postcode": {
            "type": "string",
            "minLength": 0,
            "maxLength": 10
          }
        }
      }
    }
  }
}